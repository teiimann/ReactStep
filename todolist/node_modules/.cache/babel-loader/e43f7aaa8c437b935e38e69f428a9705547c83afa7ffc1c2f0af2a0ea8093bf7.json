{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\171016559\\\\Desktop\\\\ReactStep\\\\todolist\\\\src\\\\components\\\\TodoInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './TodoInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoInput({\n  task,\n  onSave,\n  isEditing,\n  onCancel\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(task || '');\n  function handleSave() {\n    if (inputValue.trim()) {\n      onSave(inputValue);\n      setInputValue('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Write your task\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      type: \"text\",\n      className: \"task-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: isEditing ? 'Save' : 'Add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoInput, \"FRZN43uE2Ev35DNab/vCekJXVlc=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoInput","task","onSave","isEditing","onCancel","_s","inputValue","setInputValue","handleSave","trim","className","children","placeholder","value","onChange","e","target","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/171016559/Desktop/ReactStep/todolist/src/components/TodoInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './TodoInput.css';\r\n\r\nfunction TodoInput({ task, onSave, isEditing, onCancel }) {\r\n  const [inputValue, setInputValue] = useState(task || '');\r\n\r\n  function handleSave() {\r\n    if (inputValue.trim()) {\r\n      onSave(inputValue);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        placeholder=\"Write your task\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        type=\"text\"\r\n        className=\"task-input\"\r\n      />\r\n      <button onClick={handleSave}>\r\n        {isEditing ? 'Save' : 'Add'}\r\n      </button>\r\n      {isEditing && <button onClick={onCancel}>Cancel</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACI,IAAI,IAAI,EAAE,CAAC;EAExD,SAASO,UAAUA,CAAA,EAAG;IACpB,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;MACrBP,MAAM,CAACI,UAAU,CAAC;MAClBC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF;EAEA,oBACER,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BZ,OAAA;MACEa,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEP,UAAW;MAClBQ,QAAQ,EAAGC,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,IAAI,EAAC,MAAM;MACXP,SAAS,EAAC;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFtB,OAAA;MAAQuB,OAAO,EAAEd,UAAW;MAAAG,QAAA,EACzBR,SAAS,GAAG,MAAM,GAAG;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACRlB,SAAS,iBAAIJ,OAAA;MAAQuB,OAAO,EAAElB,QAAS;MAAAO,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAAChB,EAAA,CAzBQL,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA2BlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}